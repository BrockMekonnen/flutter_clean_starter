{
  "loginPage": {
    "signIn": "符号",
    "password": "密码",
    "dontHaveAccount": "没有账户？",
    "signUp": "报名",
    "emailAddress": "电子邮件",
    "passwordMinLengthErrorMessage": "密码长度必须至少为 8 位",
    "passwordSpecialCharacterErrorMessage": "密码必须至少包含一个特殊字符"
  },
  "registerPage": {
    "signUp": "报名",
    "firstName": "名字",
    "lastName": "姓",
    "phoneNumber": "电话号码",
    "emailAddress": "电子邮件",
    "password": "密码",
    "confirm": "确认",
    "showPassword": "显示密码",
    "iAgreeToTermCondition": "我同意条款和条件",
    "alreadyHaveAccount": "已有账户？",
    "signIn": "登入",
    "passwordDoNotMatch": "密码不匹配",
    "validPhoneNumberErrorMessage": "请输入有效的电话号码",
    "phoneNumberHint": "输入您的电话号码（例如，+1 123-456-7890）"
  },
  "homePage": {
    "title": "首页",
    "hello": "你好"
  },
  "settingsPage": {
    "title": "设置",
    "darkMode": "深色模式",
    "lightMode": "灯光模式",
    "language": "语言"
  },
  "layoutPage": {
    "home": "首页",
    "profile": "轮廓",
    "settings": "设置",
    "logout": "登出",
    "changeLanguage": "更改语言",
    "changeTheme": "更改主题"
  },
  "profilePage": {
    "title": "轮廓"
  },
  "landingPage": {
    "welcomeTo": "欢迎来到",
    "cleanStarter": "清爽起步",
    "paragraph1": "本 Flutter 模板项目基于清晰架构和模块化架构原则构建，提供了一个坚实且可扩展的基础，帮助你快速启动结构清晰、易于维护、具备扩展性的 Flutter 应用程序。",
    "paragraph2": "这个项目非常适合希望通过可扩展且清晰架构快速启动 Flutter 应用的开发者。它易于扩展、维护，并可轻松适配为生产就绪的应用程序。祝你构建愉快！🚀",
    "featuresTitle": "📦 包含的功能",
    "structureTitle": "📁 项目结构",
    "structureLine1": "- _core: 核心功能、库和配置\n- _shared: 共享页面、小部件和工具\n- modules: 基于功能的结构\n  • auth:\n    ├── data（数据层）\n    ├── domain（领域层）\n    └── features（界面层）\n  • user: 用户功能的占位符\n  • todo: 预留给未来开发",
    "structureDetails": "- _core: 核心功能、库和配置\n- _shared: 共享页面、小部件和工具\n- modules: 基于功能的结构\n  • auth:\n    ├── data（数据层）\n    ├── domain（领域层）\n    └── features（界面层）\n  • user: 用户功能的占位符\n  • todo: 预留给未来开发",
    "gettingStartedTitle": "🚀 入门",
    "gettingStartedDetails": "1. 从 GitHub 克隆仓库  \n2. 运行 `flutter pub get`  \n3. 使用 `flutter run` 启动项目  \n4. 开始构建你的功能！",
    "techStackTitle": "🛠️ 技术栈",
    "techStackDetails": "🧭 GoRouter 用于现代路由  \n📦 BLoC 用于状态管理  \n📁 Hive 用于本地缓存和存储  \n🌐 Dio 用于网络请求  \n🧩 GetIt 用于依赖注入  ",
    "featuresDetails": "✅ 登录和注册流程  \n✅ 主页、个人资料和设置页面  \n✅ 支持深色和浅色主题  \n✅ 本地化：英语、西班牙语、中文、阿拉伯语  \n✅ 响应式设计，适配网页和移动设备  ",
    "viewOnGithub": "在 GitHub 上查看",
    "paragraph3": "我们欢迎各种形式的贡献！\n请 Fork 仓库，进行修改，然后提交 Pull Request。",
    "contributionsWelcome": "🤝 欢迎贡献"
  }
}